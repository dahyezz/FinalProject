<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- 인터셉터 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<exclude-mapping path="/member/login" />
			<exclude-mapping path="/member/join" />
			<exclude-mapping path="/member/idCheck" />
			<exclude-mapping path="/member/nickCheck" />
			<exclude-mapping path="/member/emailCheck" />
			
			<exclude-mapping path="/member/joinEmail" />
			<exclude-mapping path="/member/joinComplete" />
			<exclude-mapping path="/info/privacypolicy" />
			<exclude-mapping path="/info/termofservice" />
			<exclude-mapping path="/main"/>
			<exclude-mapping path="/kg_main" />
			<exclude-mapping path="/unitime" />
			<exclude-mapping path="/image/**"/>
			<exclude-mapping path="/member/pwFind"/>
			
			<beans:bean class="web.interceptor.Interceptor" />
		</interceptor>
	</interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/js/**" location="/resources/js/" />
	<resources mapping="/css/**" location="/resources/css/" />
	<resources mapping="/tastyUpload/**" location="/resources/tastyUpload/" />
	<resources mapping="/freeUpload/**" location="/resources/freeUpload/" />
	<resources mapping="/image/**" location="/resources/image/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- URL 기반의 ViewResolver -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- UI 레이아웃 구성 설정파일 -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/template.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- 자바 스프링 빈 기반의 ViewResolver -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0" /> <!-- 우선순위 -->
	</beans:bean>
	
	<!-- FreeDownoadView 클래스를 freedown이라는 이름의 빈으로 등록 -->
	<beans:bean id="freedown" class="web.view.FreeDownloadView" />
	
	<!-- MultipartResolver -->
	<!-- 파일업로드 처리 클래스 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxInMemorySize" value="1048576" /> <!-- 1MB -->
		<beans:property name="maxUploadSize" value="10485760" /> <!-- 10MB -->
	</beans:bean>
	
	<!-- JSON응답을 위한 jsonView 스프링 빈 등록-->
	<beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
		<beans:property name="contentType" value="application/json;charset=utf-8" />
	</beans:bean>
	
	<context:component-scan base-package="com.unitime.www, web" />
	
	
	
</beans:beans>
