<?xml version="1.0" encoding="UTF-8"?>

<!-- 마이바티스 3 Mapper DOCTYPE -->
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="web.dao.face.TastyBoardDao">

	<select id="selectCntAll" resultType="int">
		SELECT COUNT(*)
		FROM tastyboard_kg
		<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
			<choose>
		    	<when test="searchType == 'total'">
		        	WHERE loc LIKE '%' || '${keyword }' || '%'
		        	OR content LIKE '%' || '${keyword }' || '%'
		        	OR writer LIKE '%' || '${keyword }' || '%'
		        	</when>
		        <when test="searchType != 'total'">
		        	WHERE ${searchType } LIKE '%' || '${keyword }' || '%'
		        </when>
			</choose>
		</if>
	</select>
	
	<select id="selectAll" parameterType="web.util.Paging" resultType="web.dto.TastyBoard">
		SELECT boardno, tag, store_name storeName, loc, content, writer, hit, score, writtendate,
			 ( SELECT COUNT(*) FROM tastycomment_kg WHERE boardno = tastyboard_kg.boardno ) AS commentCnt,
			 ( SELECT min(fileno) FROM tastyfile_kg WHERE boardno = tastyboard_kg.boardno ) AS fileno
		FROM (
			SELECT rownum rnum, B.* FROM (
				SELECT * FROM tastyboard_kg
				<if test="searchType != null and searchType != '' and keyword != null and keyword != ''">
		        	<choose>
		        		<when test="searchType == 'total'">
		        			WHERE loc LIKE '%' || '${keyword }' || '%'
		        			OR content LIKE '%' || '${keyword }' || '%'
		        			OR writer LIKE '%' || '${keyword }' || '%'
		        		</when>
		        		<when test="searchType != 'total'">
		        			WHERE ${searchType } LIKE '%' || '${keyword }' || '%'
		        		</when>
		        	</choose>
		        </if>
		        <if test="listSelect != null and listSelect != '' ">
		        	<choose>
		        		<when test="listSelect == 'totalScore'">
		        			ORDER BY score DESC, boardno DESC
		        		</when>
		        		<when test="listSelect == 'hitScore'">
		        			ORDER BY hit DESC, boardno DESC
		        		</when>
		        		<when test="listSelect == 'date'">
		        			ORDER BY boardno DESC
		        		</when>
		        	</choose>
		        </if>
				) B
			ORDER BY rnum
		) tastyboard_kg
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
	</select>
	
	<update id="updateHit" parameterType="web.dto.TastyBoard">
		UPDATE tastyboard_kg
		SET hit = hit + 1
		WHERE boardno = #{boardno }
	</update>
	
	<select id="selectBoardByBoardno" parameterType="web.dto.TastyBoard" resultType="web.dto.TastyBoard">
		SELECT boardno, tag, store_name storeName, loc, content, writer, hit, score, writtendate
		FROM tastyboard_kg
		WHERE boardno = #{boardno }
	</select>
	
	<insert id="insertBoard" parameterType="web.dto.TastyBoard">
	
		<selectKey order="BEFORE" resultType="int" keyProperty="boardno">
			SELECT tastyboard_kg_seq.nextval FROM dual
		</selectKey>

		INSERT INTO tastyboard_kg (boardno, tag, store_name, loc, content, writer, score) 
		VALUES (#{boardno }, #{tag }, #{storeName }, #{loc }, #{content } , #{writer }, #{score })
	</insert>
	
	<delete id="deleteBoardByBoardno" parameterType="web.dto.TastyBoard">
		DELETE FROM tastyboard_kg
		WHERE boardno = #{boardno }
	</delete>
	
	<update id="updateBoard" parameterType="web.dto.TastyBoard">
		UPDATE tastyboard_kg
		SET tag=#{tag }, store_name=#{storeName}, loc=#{loc }, content=#{content }, score=#{score }
		WHERE boardno = #{boardno }
	</update>
	
	<select id="selectBoardno" resultType="int">
<!-- 		SELECT max(boardno) boardno FROM tastyboard_kg -->
		SELECT tastyboard_kg_seq.nextval FROM dual
	</select>
	
	<insert id="insertFile" parameterType="web.dto.TastyFile">
	
		<selectKey order="BEFORE" resultType="int" keyProperty="fileno">
			SELECT tastyfile_kg_seq.nextval FROM dual
		</selectKey>
	
		INSERT INTO tastyfile_kg (fileno, boardno, origin_name, stored_name, filesize)
		VALUES (#{fileno }, #{boardno }, #{originName }, #{storedName }, #{filesize })
	</insert>
	
	<select id="selectFileByFileno" parameterType="int" resultType="web.dto.TastyFile">
		SELECT fileno, boardno, origin_name originName, stored_name storedName, filesize
		FROM tastyfile_kg
		WHERE fileno = #{fileno }
	</select>
	
	<select id="selectAllCommentByBoardno" parameterType="web.dto.TastyBoard" resultType="web.dto.TastyComment">
		SELECT commentno, boardno, refCommentno, dept, writer, content, writtendate, badCnt 
		FROM (
		    SELECT commentno, boardno, ref_commentno refCommentno, dept, writer, content, writtendate,
		        (SELECT COUNT(*) FROM badreport_kg WHERE commentno = tastycomment_kg.commentno ) AS badCnt
		    FROM tastycomment_kg)
		WHERE boardno = #{boardno }
		START WITH refCommentno = 0 
		CONNECT BY PRIOR commentno = refCommentno
	</select>
	
	<insert id="insertComment" parameterType="web.dto.TastyComment">
		INSERT INTO tastycomment_kg(commentno, boardno, ref_commentno, dept, writer, content)
		VALUES (tastycomment_kg_seq.nextval, #{boardno }, #{refCommentno }, #{dept }, #{writer }, #{content } )
	</insert>
	
	<select id="selectBoardnoByCommentno" parameterType="web.dto.TastyComment" resultType="web.dto.TastyComment">
		SELECT commentno, boardno, ref_commentno refCommentno, dept, writer, content, writtendate
		FROM tastycomment_kg
		WHERE commentno = #{commentno }
	</select>
	
	<delete id="deleteComment" parameterType="web.dto.TastyComment">
		DELETE tastycomment_kg
		WHERE commentno = #{commentno }
	</delete>
	
	<delete id="deleteCommentByBoardno" parameterType="web.dto.TastyBoard">
		DELETE tastycomment_kg
		WHERE boardno = #{boardno }
	</delete>
	
	<delete id="deleteFileByboardno" parameterType="web.dto.TastyBoard">
		DELETE tastyfile_kg
		WHERE boardno = #{boardno }
	</delete>
	
	<update id="updateComment" parameterType="web.dto.TastyComment" >
		UPDATE tastycomment_kg
		SET content = #{content }, writtendate = SYSDATE
		WHERE commentno = #{commentno }
	</update>
	
	<insert id="insertBadByBoard" parameterType="web.dto.BadReport">
		INSERT INTO badreport_kg
		VALUES (badreport_kg_seq.nextval ,#{boardname }, #{boardno }, #{commentno },#{reason }, #{nickname })
	</insert>
	
	<select id="selectFileByBoardno" parameterType="web.dto.TastyBoard" resultType="web.dto.TastyFile">
		SELECT fileno, boardno, origin_name originName, stored_name storedName, filesize
		FROM tastyfile_kg
		WHERE boardno = #{boardno }
	</select>
	
	<update id="updateBoardnoToFile" parameterType="web.dto.TastyBoard">
		UPDATE tastyfile_kg
		SET boardno = #{boardno }
		WHERE boardno = 0
	</update>
	
	<delete id="deleteFileByfileno" parameterType="web.dto.TastyFile">
		DELETE tastyfile_kg
		WHERE fileno = #{fileno } 
	</delete>

	<select id="selectCntBadReport" parameterType="web.dto.BadReport" resultType="int">
		SELECT COUNT(*)
		FROM badreport_kg
		WHERE boardname = #{boardname } 
		AND boardno = #{boardno }
		AND commentno = #{commentno }
		AND nickname = #{nickname }
	</select>
	
	<select id="selectCntRecomment" parameterType="web.dto.TastyComment" resultType="int">
		SELECT count(*)
		FROM tastycomment_kg
		WHERE ref_commentno=#{commentno }
	</select>
	
	<update id="updateDeletedComment" parameterType="web.dto.TastyComment">
		UPDATE tastycomment_kg
		SET writer = '알수없음', content = '삭제된 댓글입니다.', writtendate = ''
		WHERE commentno = #{commentno }
	</update>
	
</mapper>